#!/usr/bin/env python3
"""
This is the main components of the client registar for Naumachia2
It is designed to interface with the OpenVPN learn-address event.
Whenever OpenVPN fires that event off, this script updates Redis
"""

from argparse import ArgumentParser
from redis import StrictRedis
import os
import logging

logging.basicConfig(level=logging.DEBUG)

def parse_args():
    parser = ArgumentParser(description="Interface with the OpenVPN. Stores CN-address realations into a Redis DB")
    parser.add_argument('action', help="The action to be prefeormed for the given args. From set {add, update, delete}", choices=["add", "update", "delete"])
    parser.add_argument('addr', help="MAC address associated with the given common name")
    parser.add_argument('cn', help="The common name (CN) associated with the address", nargs='?') 

    return parser.parse_args()

def get_env():
    env = {}
    env['REDIS_HOSTNAME'] = os.getenv('REDIS_HOSTNAME', 'redis')
    env['REDIS_DB'] = int(os.getenv('REDIS_DB', '0'))
    env['REDIS_PORT'] = int(os.getenv('REDIS_PORT', '6379'))
    return env

if __name__ == "__main__":
    args = parse_args()
    env = get_env()

    redis = StrictRedis(host=env['REDIS_HOSTNAME'], db=env['REDIS_DB'], port=env['REDIS_PORT'])

    if args.action == "add" or args.action == "update":
        if not args.cn:
            raise ValueError("CN is required for add/update")
        addr = redis.get('cname::'+args.cn)
        if addr:
            addr = addr.decode('utf-8')
            redis.delete('addr::'+addr)
        redis.set('cname::'+args.cn, args.addr)
        redis.set('addr::'+args.addr, args.cn)

    elif args.action == "delete":
        cn = redis.get('addr::'+args.addr)
        if cn:
            cn = cn.decode('utf-8')
            redis.delete('cname::'+cn)
        redis.delete('addr::'+args.addr)

    else:
        raise ValueError("Unrecognized command: {}".format(args.action))

    logging.info("Successful completed {} {} {}".format(args.action, args.addr, args.cn))
