version: '3'

services:
    {% if eve -%}
    # Eve is container designed to connect to the network for testing a debugging
    eve:
        build: ./eve/build
        networks:
            default:
            internal:
        stdin_open: true
        tty: true
        volumes:
            - ./eve/config:/config
            - ./:/mnt/host
        privileged: true

    {% endif -%}
    {% for name, chal in challenges.items() -%}
    openvpn_{{ name }}:
        build:
            context: ./openvpn/build
            args:
                - OVPN_REPO_URL
                - OVPN_REPO_BRANCH
        image: naumachia/openvpn
        depends_on:
            - manager
        volumes:
            - /var/run/docker/netns/default:/var/run/netns/host
            - ./openvpn/scripts:/scripts:ro
            - ./openvpn/config/{{ name }}:/etc/openvpn
        devices:
            - "/dev/net/tun:/dev/net/tun"
        cap_add:
            - NET_ADMIN
        networks:
            default:
            internal:
        ports:
            - "{{ chal.port }}:1194/udp"
        environment:
            - NAUM_MGM_HOST
            - NAUM_FILES={{ chal.files|tojson }}
            - NAUM_CHAL="{{ name }}"

    {% endfor -%}
    {% if registrar -%}
    registrar:
        build: ./registrar
        image: naumachia/registrar
        volumes:
            - ./openvpn/config/:/var/openvpn
            - ./registrar/app:/app:ro
            - ./logs/registrar:/var/log/gunicorn
            {% if registrar.tls_enabled -%}
            - ./registrar/certs/registrar{% if domain %}.{{ domain }}{% endif %}.crt:/etc/ssl/registrar.crt
            - ./registrar/certs/registrar{% if domain %}.{{ domain }}{% endif %}.key:/etc/ssl/registrar.key
            - ./registrar/certs/ca{% if domain %}.{{ domain }}{% endif %}.crt:/etc/ssl/ca.crt
            {%- endif %}
        environment:
            - OPENVPN_BASE=/var/openvpn
            - TLS_ENABLED={{ registrar.tls_enabled }}
            - TLS_VERIFY_CLIENT={{ registrar.tls_verify_client }}
        networks:
            internal:
            {{ registrar.network }}:
        ports:
            - "{{ registrar.port }}:3960"
        restart: unless-stopped

    {% endif -%}

    manager:
        build: ./manager/build
        image: naumachia/manager
        networks:
            internal:
                 aliases:
                     - "$NAUM_MGM_HOST"
        volumes:
            - ./manager/app:/app
            - {{ challenges_directory }}:/challenges
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/run/docker/netns/default:/var/run/netns/host
        cap_add:
            - NET_ADMIN
            - SYS_ADMIN

networks:
    internal:
        internal: true
    {% if registrar and registrar.network not in ("default", "internal") -%}
    {{ registrar.network }}:
        external: true
    {%- endif -%}
